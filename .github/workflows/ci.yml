name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

env:
  CARGO_TERM_COLOR: always

# YAML anchor for reusable steps
x-ubuntu-deps: &ubuntu-deps |
  sudo apt-get update
  sudo apt-get install -y \
    libwebkit2gtk-4.0-dev \
    build-essential \
    curl \
    wget \
    file \
    libssl-dev \
    libgtk-3-dev \
    libayatana-appindicator3-dev \
    librsvg2-dev

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install dependencies
      run: npm ci

    - name: Install system dependencies
      run: *ubuntu-deps

    - name: Run Rust tests
      run: make cargo-test

    - name: Run Rust clippy
      run: make cargo-clippy

    - name: Check Rust formatting
      run: make cargo-fmt-check

    - name: Build desktop app
      run: npm run build:desktop

  build-tauri:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: *ubuntu-deps

    - name: Install dependencies
      run: npm ci

    - name: Build Tauri app
      run: npm run tauri:desktop -- build
