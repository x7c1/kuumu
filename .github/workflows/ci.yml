name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install dependencies
      run: npm ci

    - name: Install system dependencies
      run: ./scripts/install-ubuntu-deps.sh

    - name: Cache fonts
      uses: actions/cache@v4
      with:
        path: frontend/apps/three-js-layouter-example/public/fonts/
        key: ${{ runner.os }}-fonts-${{ hashFiles('scripts/font-config.json') }}
        restore-keys: |
          ${{ runner.os }}-fonts-

    - name: Setup environment
      run: cp .envrc.example .envrc && direnv allow

    - name: Setup fonts
      run: direnv exec . npm run fonts:setup

    - name: Run Rust tests
      run: make cargo-test

    - name: Run Rust clippy
      run: make cargo-clippy

    - name: Check Rust formatting
      run: make cargo-fmt-check

    - name: Build all TypeScript projects
      run: npm run build --workspaces

  build-tauri:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: ./scripts/install-ubuntu-deps.sh

    - name: Install dependencies
      run: npm ci

    - name: Cache fonts (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v4
      with:
        path: frontend/apps/three-js-layouter-example/public/fonts/
        key: ${{ runner.os }}-fonts-${{ hashFiles('scripts/font-config.json') }}
        restore-keys: |
          ${{ runner.os }}-fonts-

    - name: Setup environment (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: cp .envrc.example .envrc && direnv allow

    - name: Setup fonts (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: direnv exec . npm run fonts:setup

    - name: Build Tauri app
      run: npm run tauri:desktop -- build
